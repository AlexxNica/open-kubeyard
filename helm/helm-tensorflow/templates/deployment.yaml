{{- $repo := .Values.image.repo -}}
{{- $name := .Values.image.name -}}
{{- $tag := .Values.image.tag -}}
{{- $pull_policy := .Values.image.pull_policy -}}
{{- $port := .Values.image.port -}}
{{- $script := .Values.tfCluster.startScript -}}
{{- $num_ps := .Values.tfCluster.settings.jobs.ps -}}
{{- $num_worker := .Values.tfCluster.settings.jobs.worker -}}


---
{{- range $job, $nb := .Values.tfCluster.settings.jobs }}
{{ range $i, $e := until (int $nb) | default 8 }}
# Definiting a scalable cluster
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $job }}-{{$i}}
spec:
  selector:
    matchLabels:
      job: {{ $job }}
      task: t{{$i}}
  replicas: 1
  template:
    metadata:
     labels:
      app: distributed-tensorflow
      job: {{ $job }}
      task: t{{$i}}
    spec:
      containers:
      - name: tensorflow
        image: {{ $repo }}/{{ $name }}:{{ $tag }}
        imagePullPolicy: {{ $pull_policy }}
        ports:
        - containerPort: {{ $port }}
        args:
          - python3
          - {{ $script }}
          - --task_index={{ $i }}
          - --job_name={{ $job }}
          - --worker_hosts={{ range $k := until (int $num_worker) }}worker-{{ $k }}:{{ $port }}{{ if lt (int $k | add 1) (int $num_worker)  }}{{print "," }}{{ end }}{{end}}
          - --ps_hosts={{ range $k := until (int $num_ps) }}ps-{{ $k }}:{{ $port }}{{ if lt (int $k | add 1) (int $num_ps)  }}{{print "," }}{{ end }}{{end}}
---
{{ end }}
{{ end }}