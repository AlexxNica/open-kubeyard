apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "hdfs-datanode-fqan" . }}
  labels:
    app: {{ template "hdfs-datanode-fqan" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "hdfs-datanode-fqan" . }}
  replicas: {{ default 2 .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "hdfs-datanode-fqan" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum  }}
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "mount-permissions-fix",
                "image": "busybox",
                "imagePullPolicy": "IfNotPresent",
                "command": ["sh", "-c", "chown -R 100:101 /data/dfs/dn"],
                "volumeMounts": [
                    {
                      "name": "data-volume-claim",
                      "mountPath": "/data/dfs/dn"
                    }
                ]
            },
            {
                "name": "wait-for-hdfs-namenode",
                "image": "busybox",
                "imagePullPolicy": "IfNotPresent",
                "command": ["sh", "-c", "until nslookup {{ template "hdfs-namenode-fqdn" . }}; do echo waiting for hdfs-namenode; sleep 2; done;"]
            }
        ]'
    spec:
      containers:
      - name: hadoop
        image: "{{ .Values.image.registry_path }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pull_policy }}
        args:
        - hdfs
        - datanode
        ports:
        - name: http
          containerPort: 50075
          protocol: TCP
        - name: xceiver
          containerPort: 50010
          protocol: TCP
        - name: ipc
          containerPort: 50020
          protocol: TCP
        resources:
{{ toYaml .Values.hdfs.datanode.resources | indent 10 }}
        volumeMounts:
        - mountPath: /etc/hadoop
          name: config-volume
        - mountPath: /data/dfs/dn
          name: data-volume-claim
      volumes:
      - name: config-volume
        configMap:
          name: {{ template "fullname" . }}
  volumeClaimTemplates:
  - metadata:
      name: data-volume-claim
      annotations:
      {{- if .Values.hdfs.datanode.persistence.storageClass }}
        volume.beta.kubernetes.io/storage-class: {{ .Values.hdfs.datanode.persistence.storageClass | quote }}
      {{- else }}
        volume.alpha.kubernetes.io/storage-class: default
      {{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ default "10Gi" .Values.hdfs.datanode.persistence.size | quote }}

