apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysql
  namespace: {{ .Values.image.namespace }}
  labels:
    app: mysql
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image:  "{{ .Values.image.registry_path }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pull_policy }}
        args:
          - mysqld
          - --character-set-server=utf8
          - --collation-server=utf8_general_ci
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: root-password
        ports:
        - name: mysql
          containerPort: 3306
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 10 }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
          - name: init-volume
            mountPath: /docker-entrypoint-initdb.d
          - name: data-volume
            mountPath: /var/lib/mysql
      volumes:
      - name: init-volume
        configMap:
          name: mysql-config-map
      - name: data-volume
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: mysql-volume-claim
      {{- else }}
        emptyDir: {}
      {{- end -}}